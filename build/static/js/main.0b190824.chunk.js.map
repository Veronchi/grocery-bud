{"version":3,"sources":["List.js","Alert.js","App.js","index.js"],"names":["List","items","onEditItem","onDeleteItem","onClearList","className","map","text","id","key","type","onClick","Alert","status","messageText","clearAlert","message","useEffect","timer","setTimeout","clearTimeout","Fragment","App","storageInputValue","JSON","parse","localStorage","getItem","storageListItems","storageEditMode","inputDefaultState","useState","inputValue","setInputValue","listItems","setListItems","submit","setSubmit","alert","setAlert","stateJSON","stringify","setItem","onSubmit","e","preventDefault","obj","Date","now","edit","listItem","item","placeholder","value","onChange","target","length","idx","find","newItemList","filter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0b190824.chunk.js","sourcesContent":["import React from 'react'\nimport { FaEdit, FaTrash } from 'react-icons/fa'\n\nconst List = ({ items, onEditItem, onDeleteItem, onClearList }) => {\n  return (\n    <div className='grocery-container'>\n      <ul className='grocery-list'>\n        {items.map(({text, id}) => {\n          return (\n            <li key={id} className='grocery-item'>\n              <p className='title'>{text}</p>\n              <div className='btn-container'>\n                <button type='button' className='edit-btn' onClick={() => onEditItem(id)}>\n                  <FaEdit />\n                </button>\n                <button type='button' className='delete-btn' onClick={() => onDeleteItem(id)}>\n                  <FaTrash />\n                </button>\n              </div>\n            </li>\n          );\n        })}\n      </ul>\n      <button className='clear-btn' onClick={() => onClearList()}>clear items</button>\n    </div>\n  )\n}\n\nexport default List\n","import React, { useEffect } from \"react\";\n\nconst Alert = ({ status, messageText, clearAlert }) => {\n  let message = <p className={`alert alert-${status}`}>{messageText}</p>;\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      clearAlert();\n    }, 3000);\n\n    return () => clearTimeout(timer);\n  }, [clearAlert]);\n\n  return <React.Fragment>{message}</React.Fragment>;\n};\n\nexport default Alert;\n","import React, { useState, useEffect } from 'react'\nimport List from './List'\nimport Alert from './Alert'\n\n\nfunction App() {\n  const storageInputValue = JSON.parse(localStorage.getItem('inputValue'));\n  const storageListItems = JSON.parse(localStorage.getItem('listItems'));\n  const storageEditMode = JSON.parse(localStorage.getItem('editMode'));\n\n  const inputDefaultState = { id: '', text: '' };\n  const [inputValue, setInputValue] = useState(storageInputValue || inputDefaultState);\n  const [listItems, setListItems] = useState(storageListItems || []);\n  const [submit, setSubmit] = useState(storageEditMode || 'submit');\n  const [alert, setAlert] = useState(null);\n\n  useEffect(() => {\n    const stateJSON = JSON.stringify(inputValue);\n    localStorage.setItem('inputValue', stateJSON);\n  }, [inputValue]);\n\n  useEffect(() => {\n    const stateJSON = JSON.stringify(listItems);\n    localStorage.setItem('listItems', stateJSON);\n  }, [listItems]);\n\n  useEffect(() => {\n    const stateJSON = JSON.stringify(submit);\n    localStorage.setItem('editMode', stateJSON);\n  }, [submit]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const obj = {\n      submit: function () {\n        setListItems([...listItems, { id: Date.now(), text: inputValue.text }]);\n        setInputValue(inputDefaultState);\n        setAlert(\n          {status: 'success', messageText: 'item added to the list'}\n        );\n      },\n      edit: function () {\n        let listItem = listItems.map((item) => {\n          if (inputValue.id === item.id) item.text = inputValue.text;\n          return item;\n        });\n        setListItems(listItem);\n        setSubmit('submit');\n        setAlert(\n          {status: 'success', messageText: 'value changed'}\n        );\n        setInputValue(inputDefaultState);\n      }\n    }\n    if (inputValue.text === '') {\n      setAlert(\n        {status: 'danger', messageText: 'please enter value'}\n      );\n    } else {\n      obj[submit]();\n    }\n\n  }\n\n  const handleInputState = (e) => {\n    setInputValue({ ...inputValue, text: e.target.value });\n  }\n\n  const onEditItem = (idx) => {\n    let { id, text } = listItems.find((item) => item.id === idx);\n    setInputValue({ id: id, text: text });\n    setSubmit('edit');\n  }\n\n  const onDeleteItem = (id) => {\n    const newItemList = listItems.filter((item) => item.id !== id);\n\n    setListItems(newItemList);\n    setAlert(\n      {status: 'danger', messageText: 'item removed'}\n    );\n  }\n\n  const onClearList = () => {\n    setListItems([]);\n    setAlert(\n      {status: 'danger', messageText: 'empty list'}\n    );\n  }\n\n  const clearAlert = () => {\n    setAlert(null);\n  }\n\n  return (\n    <section className='section-center'>\n      <form className='grocery-form' onSubmit={handleSubmit}>\n        {(alert) ? <Alert {...alert} clearAlert={clearAlert}/> : null}\n        <h3>grocery bud</h3>\n        <div className='form-control'>\n          <input\n            type='text' className='grocery'\n            placeholder='e.g. eggs'\n            value={inputValue.text}\n            onChange={handleInputState}\n          />\n          <button type='submit' className='submit-btn'>{submit}</button>\n        </div>\n      </form>\n      {listItems.length ? <List items={listItems} onEditItem={onEditItem} onDeleteItem={onDeleteItem} onClearList={onClearList} /> : null}\n    </section>\n  )\n\n}\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}